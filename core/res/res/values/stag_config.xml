<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2022 StagOS

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/system_ext/priv-app/TouchGestures/TouchGestures.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>com.android.touch.gestures.KeyHandler</item>
    </string-array>

    <!-- The list of vendor package signatures that should also be considered
         platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
    </string-array>

    <!-- The list of components which should be automatically disabled for a specific device.
         Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Whether device has physical tri state switch -->
    <bool name="config_hasAlertSlider">false</bool>

    <!-- Alert slider proc nodes paths -->
    <string name="alert_slider_state_path"></string>
    <string name="alert_slider_uevent_match_path"></string>


    <!-- The location of the devices physical tri state switch
         0: Left side
         1: Right side -->
    <integer name="config_alertSliderLocation">0</integer>

     <!-- Defines the sysfs attribute path used by pocket bridge
         to communicate pocket state to the pocket judge kernel driver. -->
    <string name="config_pocketBridgeSysfsInpocket"></string>

    <!-- Pocket Lock -->
    <bool name="config_pocketModeSupported">true</bool>

    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName"></string>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Enable face auth only when swiping security view -->
    <bool name="config_faceAuthOnlyOnSecurityView">false</bool>

    <!-- Whether to force enable multi resolution configuration for camera -->
    <bool name="config_forceMultiResolution">false</bool>

    <!-- Global Actions prefs list -->
    <string-array translatable="false" name="custom_config_globalActionsList">
        <item>emergency</item>
        <item>power</item>
        <item>restart</item>
        <item>advanced</item>
        <item>logout</item>
        <item>users</item> 
        <item>silent</item>
        <item>screenshot</item>
        <item>airplane</item>
        <item>settings</item>
        <item>lockdown</item>
    </string-array>

    <!-- Whether device has dash charging support -->
    <bool name="config_hasDashCharger">false</bool>

    <!-- Whether device has warp charging support -->
    <bool name="config_hasWarpCharger">false</bool>

    <!-- Whether device has VOOC charging support -->
    <bool name="config_hasVoocCharger">false</bool>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath" translatable="false"></string>

    <!-- Path to fast charging status file to detect whether an oem fast charger is active -->
    <string name="config_oemFastChargerStatusPath2" translatable="false"></string>

    <!-- Expected value from fast charging status file  -->
    <string name="config_oemFastChargerStatusValue" translatable="false"></string>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">@bool/config_intrusiveNotificationLed</bool>

    <!-- Button backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsButtonBrightnessControl">0</integer>
    <dimen name="config_buttonBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Keyboard backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsKeyboardBrightnessControl">0</integer>
    <dimen name="config_keyboardBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Whether device can force navbar disabling -->
    <bool name="config_canForceDisableNavigationBar">false</bool>

    <!-- Whether device supports gestures on fingerprint sensor -->
    <bool name="config_supportsGesturesOnFingerprintSensor">false</bool>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>

    <!-- Control the behavior when the user long presses the back button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnBackBehavior">0</integer>

    <!-- Control the behavior when the user long presses the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Control the behavior when the user double-taps the home button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_doubleTapOnHomeBehavior">0</integer>

    <!-- Control the behavior when the user long presses the menu button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnMenuBehavior">2</integer>

    <!-- Control the behavior when the user long presses the app switch button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAppSwitchBehavior">0</integer>

    <!-- Control the behavior when the user long presses the app switch button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_pressOnAppSwitchBehavior">2</integer>

    <!-- Control the behavior when the user presses the assist button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_pressOnAssistBehavior">3</integer>

    <!-- Control the behavior when the user long presses the assist button.
         This needs to match the enums in
         frameworks/base/core/java/com/android/internal/util/custom/hwkeys/DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAssistBehavior">4</integer>

    <!-- Indicates that the device has Single-stage Camera key
         (without "Focus" state) instead of Dual-stage. -->
    <bool name="config_singleStageCameraKey">false</bool>

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Whether to cancel fingerprint operation if not idle -->
    <bool name="config_fpCancelIfNotIdle">false</bool>
</resources>
